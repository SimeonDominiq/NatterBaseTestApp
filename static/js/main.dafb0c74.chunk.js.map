{"version":3,"sources":["App.js","pages/QuestionView.js","pages/Loader.js","components/QuestionData.js","pages/Success.js","Routes.js","index.js"],"names":["App","react_default","a","createElement","className","class","Link","to","Component","Test","props","undefined","itemlist","skipped","id","question","type","name","value","onChange","handleChange","htmlFor","Loader","QuestionData","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","skippedQuest","checkSkippedQuest","state","questions","setState","prevState","map","item","answered","alert","history","push","skip_count","forEach","buildQuestionsObject","newQuestObj","i","length","isLoading","errorLoading","_this2","fetch","method","headers","x-access-token","then","response","json","data","catch","error","_this3","QuestionComponent","QuestionView","key","pages_Loader","onSubmit","Success","Routes","BrowserRouter","Route","exact","path","component","ReactDOM","render","src_Routes","document","getElementById"],"mappings":"0PA0BeA,0LApBX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kSAOAF,EAAAC,EAAAC,cAAA,OAAKE,MAAM,eACTJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,QAAQF,MAAM,OAAvB,kBAbQG,cC2CHC,MA7Cf,SAAcC,GACZ,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MACEC,eAC6BO,IAA3BD,EAAME,SAASC,UACY,IAA3BH,EAAME,SAASC,QACX,iBACA,IAGNZ,EAAAC,EAAAC,cAAA,YAAOO,EAAME,SAASE,GAAtB,KARF,IAQqCJ,EAAME,SAASG,UAEpDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEa,KAAK,QACLC,KAAM,UAAYP,EAAME,SAASE,GACjCI,MAAM,IACNJ,GAAIJ,EAAME,SAASE,GAAK,IACxBK,SAAU,kBAAMT,EAAMU,aAAaV,EAAME,SAASE,OAEpDb,EAAAC,EAAAC,cAAA,SAAOkB,QAASX,EAAME,SAASE,GAAK,KAApC,MAEAb,EAAAC,EAAAC,cAAA,SACEa,KAAK,QACLC,KAAM,UAAYP,EAAME,SAASE,GACjCI,MAAM,IACNJ,GAAIJ,EAAME,SAASE,GAAK,IACxBK,SAAU,kBAAMT,EAAMU,aAAaV,EAAME,SAASE,OAEpDb,EAAAC,EAAAC,cAAA,SAAOkB,QAASX,EAAME,SAASE,GAAK,KAApC,MAEAb,EAAAC,EAAAC,cAAA,SACEa,KAAK,QACLC,KAAM,UAAYP,EAAME,SAASE,GACjCI,MAAM,IACNJ,GAAIJ,EAAME,SAASE,GAAK,IACxBK,SAAU,kBAAMT,EAAMU,aAAaV,EAAME,SAASE,OAEpDb,EAAAC,EAAAC,cAAA,SAAOkB,QAASX,EAAME,SAASE,GAAK,KAApC,SCnCOQ,MAJf,WACE,OAAOrB,EAAAC,EAAAC,cAAA,yBC8JMoB,cAxJb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QA+BFI,aAAe,SAAAC,GACbA,EAAMC,iBAEN,IAAIC,EAAeV,EAAKW,kBAAkBX,EAAKY,MAAMC,WAErDb,EAAKc,SAAS,SAAAC,GAOZ,MAAO,CACLF,UAPuBE,EAAUF,UAAUG,IAAI,SAAAC,GAI/C,OAHsB,IAAlBA,EAAKC,WACPD,EAAI,SAAc,GAEbA,OAOPP,EAAe,EACjBS,MAAM,oCAGNnB,EAAKd,MAAMkC,QAAQC,KAAK,aArDdrB,EA4DdW,kBAAoB,SAAAE,GAClB,IAAIS,EAAa,EAMjB,OALAT,EAAUU,QAAQ,SAAShC,IACC,IAAtBA,EAAS2B,WACXI,GAA0B,KAGvBA,GAnEKtB,EAyEdJ,aAAe,SAAAN,GACbU,EAAKc,SAAS,SAAAC,GAUZ,MAAO,CACLF,UAVuBE,EAAUF,UAAUG,IAAI,SAAAC,GAO/C,OANIA,EAAK3B,KAAOA,IACd2B,EAAKC,UAAW,QAEG/B,IAAjB8B,EAAK5B,SAAyB4B,EAAK3B,KAAOA,IAC5C2B,EAAK5B,SAAU,GAEV4B,QAlFCjB,EA8FdwB,qBAAuB,SAAAX,GAErB,IADA,IAAIY,EAAc,GACTC,EAAI,EAAGA,EAAIb,EAAUc,OAAQD,IACpCD,EAAYJ,KAAK,CACf/B,GAAIoC,EAAI,EACRnC,SAAUsB,EAAUa,GACpBR,UAAU,IAGdlB,EAAKc,SAAS,CACZD,UAAWY,KAtGbzB,EAAKY,MAAQ,CACXgB,WAAW,EACXC,cAAc,EACdhB,UAAW,IALDb,mFASM,IAAA8B,EAAA3B,KAClB4B,MAfY,4CAeG,CACbC,OAAQ,MACRC,QAAS,CACPC,iBAhBJ,8JAmBGC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJR,EAAKN,qBAAqBc,EAAKzB,WAC/BiB,EAAKhB,SAAS,CACZc,WAAW,EACXC,cAAc,MAGjBU,MAAM,SAAAC,GACLV,EAAKhB,SAAS,CACZc,WAAW,EACXC,cAAc,uCAiFb,IAAAY,EAAAtC,KACHuC,EAAoB,GAaxB,OAZIvC,KAAKS,MAAMC,UAAUc,SACvBe,EAAoBvC,KAAKS,MAAMC,UAAUG,IAAI,SAAAC,GAC3C,OACExC,EAAAC,EAAAC,cAACgE,EAAD,CACEC,IAAK3B,EAAK3B,GACVF,SAAU6B,EACVrB,aAAc6C,EAAK7C,kBAOzBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZuB,KAAKS,MAAMgB,UACVnD,EAAAC,EAAAC,cAACkE,EAAD,MAEApE,EAAAC,EAAAC,cAAA,YACGwB,KAAKS,MAAMiB,aACVpD,EAAAC,EAAAC,cAAA,mEAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmE,SAAU3C,KAAKI,cAClBmC,EACDjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,SAAOa,KAAK,SAASE,MAAM,SAASd,UAAU,qBA5IzCI,aCMZ+D,MAXf,WACE,OACEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIF,MAAM,mBAAnB,gBCSSmE,EAVA,kBACbvE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACExE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7E,IACjCC,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWtD,IAC/BtB,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWN,OCPxCO,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAAYC,SAASC,eAAe","file":"static/js/main.dafb0c74.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./css/Styles.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container question-cont\">\n        <h1>9 to 5 Test</h1>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis bibendum\n          sit amet massa vitae scelerisque. Aliquam blandit viverra nisi quis\n          venenatis. Interdum et malesuada fames ac ante ipsum primis in\n          faucibus. Donec viverra risus augue. Duis laoreet rutrum lorem eu\n          pulvinar.\n        </p>\n        <div class=\"text-center\">\n          <Link to=\"/test\" class=\"btn\">\n            Start\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nfunction Test(props) {\r\n  return (\r\n    <div className=\"questions-list\">\r\n      <h4\r\n        className={\r\n          props.itemlist.skipped !== undefined &&\r\n          props.itemlist.skipped === true\r\n            ? \"question-error\"\r\n            : \"\"\r\n        }\r\n      >\r\n        <span>{props.itemlist.id}.</span> {props.itemlist.question}\r\n      </h4>\r\n      <div className=\"options-bar\">\r\n        <input\r\n          type=\"radio\"\r\n          name={\"options\" + props.itemlist.id}\r\n          value=\"1\"\r\n          id={props.itemlist.id + \"1\"}\r\n          onChange={() => props.handleChange(props.itemlist.id)}\r\n        />\r\n        <label htmlFor={props.itemlist.id + \"1\"}> 1</label>\r\n\r\n        <input\r\n          type=\"radio\"\r\n          name={\"options\" + props.itemlist.id}\r\n          value=\"2\"\r\n          id={props.itemlist.id + \"2\"}\r\n          onChange={() => props.handleChange(props.itemlist.id)}\r\n        />\r\n        <label htmlFor={props.itemlist.id + \"2\"}> 2</label>\r\n\r\n        <input\r\n          type=\"radio\"\r\n          name={\"options\" + props.itemlist.id}\r\n          value=\"3\"\r\n          id={props.itemlist.id + \"3\"}\r\n          onChange={() => props.handleChange(props.itemlist.id)}\r\n        />\r\n        <label htmlFor={props.itemlist.id + \"3\"}> 3</label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nfunction Loader() {\r\n  return <h1>Loading...</h1>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\r\nimport QuestionView from \"../pages/QuestionView\";\r\nimport Loader from \"../pages/Loader\";\r\n\r\nconst API_URL = \"http://test.natterbase.com:3002/questions\",\r\n  API_ACCESS_TOKEN =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiMDAwMDAwMDMiLCJpYXQiOjE1MzM2NDQwOTMsImV4cCI6MTU2NTA5MzY5M30.oMv_mQN6mAAmAVrRAozC7Ytk3omAye9P_TQ8Xyg3VOE\";\r\n\r\nclass QuestionData extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: true,\r\n      errorLoading: false,\r\n      questions: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(API_URL, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-access-token\": API_ACCESS_TOKEN\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.buildQuestionsObject(data.questions);\r\n        this.setState({\r\n          isLoading: false,\r\n          errorLoading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLoading: false,\r\n          errorLoading: true\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    let skippedQuest = this.checkSkippedQuest(this.state.questions);\r\n\r\n    this.setState(prevState => {\r\n      const updatedQuestions = prevState.questions.map(item => {\r\n        if (item.answered === false) {\r\n          item[\"skipped\"] = true;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        questions: updatedQuestions\r\n      };\r\n    });\r\n\r\n    if (skippedQuest > 0) {\r\n      alert(\"Please answer all the Questions!\");\r\n    } else {\r\n      // Redirect user to success page\r\n      this.props.history.push(\"/success\");\r\n    }\r\n  };\r\n\r\n  /*\r\n      Function to get the number of skipped questions\r\n  */\r\n  checkSkippedQuest = questions => {\r\n    let skip_count = 0;\r\n    questions.forEach(function(question) {\r\n      if (question.answered === false) {\r\n        skip_count = skip_count + 1;\r\n      }\r\n    });\r\n    return skip_count;\r\n  };\r\n\r\n  /*\r\n      Handle change function to monitor change in state values\r\n  */\r\n  handleChange = id => {\r\n    this.setState(prevState => {\r\n      const updatedQuestions = prevState.questions.map(item => {\r\n        if (item.id === id) {\r\n          item.answered = true;\r\n        }\r\n        if (item.skipped !== undefined && item.id === id) {\r\n          item.skipped = false;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        questions: updatedQuestions\r\n      };\r\n    });\r\n  };\r\n\r\n  /*\r\n      Build new array of objects from the retrieved\r\n      Questions\r\n  */\r\n  buildQuestionsObject = questions => {\r\n    let newQuestObj = [];\r\n    for (let i = 0; i < questions.length; i++) {\r\n      newQuestObj.push({\r\n        id: i + 1,\r\n        question: questions[i],\r\n        answered: false\r\n      });\r\n    }\r\n    this.setState({\r\n      questions: newQuestObj\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let QuestionComponent = \"\";\r\n    if (this.state.questions.length) {\r\n      QuestionComponent = this.state.questions.map(item => {\r\n        return (\r\n          <QuestionView\r\n            key={item.id}\r\n            itemlist={item}\r\n            handleChange={this.handleChange}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"container question-cont\">\r\n        {this.state.isLoading ? (\r\n          <Loader />\r\n        ) : (\r\n          <main>\r\n            {this.state.errorLoading ? (\r\n              <h1>Unable to fetch Question. Please refresh your Browser</h1>\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  <h3>My view of me</h3>\r\n                </div>\r\n                <div>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    {QuestionComponent}\r\n                    <div className=\"form-button text-center\">\r\n                      <input type=\"submit\" value=\"Submit\" className=\"btn\" />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </main>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Success() {\r\n  return (\r\n    <div className=\"container question-cont\">\r\n      <h1>Your answers were submitted successfully!</h1>\r\n      <Link to=\"/\" class=\"text-center btn\">\r\n        Go to Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport QuestionData from \"./components/QuestionData\";\r\nimport Success from \"./pages/Success\";\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route path=\"/test\" component={QuestionData} />\r\n      <Route path=\"/success\" component={Success} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}